version: 2.1

orbs:
  slack: circleci/slack@4.4.0
  win: circleci/windows@2.4.1

parameters:
  src-repo-url:
    type: string
    default: https://github.com/AEFeinstein/esp32-c3-playground.git
  windows-emu-artifact:
    type: string
    default: swadge-32-windows.zip
  firmware-artifact:
    type: string
    default: swadge-32-firmware.zip

jobs:
  build-windows:
    executor:
      name: win/default
      size: medium
      shell: powershell.exe
    parameters:
      label:
        type: string
        default: swadge-32-windows
    steps:
      - run:
          name: Download and setup MSYS2
          command: |
            # Download installer
            Invoke-WebRequest -Uri https://github.com/msys2/msys2-installer/releases/download/2022-01-28/msys2-base-x86_64-20220128.sfx.exe -Outfile msys2.exe
            # Extract to C:\msys64
            .\msys2.exe -y -oC:\
            # Delete the installer
            Remove-Item .\msys2.exe
            # Run for the first time
            C:\msys64\usr\bin\bash -lc ' '
            # Update MSYS2
            C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'  # Core update (in case any core packages are outdated)
            C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'  # Normal update
            # Install packages
            C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -S base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain git make zip python python-pip mingw-w64-x86_64-python mingw-w64-x86_64-python-pip'
            # Set the path to find msys2 binaries
            $env:Path = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;" + $env:Path
            # Install some pip packages
            pip install virtualenv click
      - run:
          name: Download and setup ESP-IDF
          command: |
            # Set the path to find msys2 binaries
            $env:Path = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;" + $env:Path
            # Clone the IDF
            cd ~
            mkdir esp
            cd esp
            git clone https://github.com/AEFeinstein/esp-idf.git -j (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
            cd esp-idf
            git submodule update --init --recursive -j (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
            # Install the tools
            .\install.ps1
      - run:
          name: Clone and build Swadge Emulator and Firmware
          shell: powershell.exe
          command: |
            # Set the path to find msys2 binaries
            $env:Path = "C:\msys64\mingw32\bin;C:\msys64\usr\bin;" + $env:Path
            # Export the IDF symbols
            ~\esp\esp-idf\install.ps1
            ~\esp\esp-idf\export.ps1
            # Be extra careful. CircleCI wasn't setting up they python env...
            cd ~\esp\esp-idf\
            python .\tools\idf_tools.py --non-interactive install
            python .\tools\idf_tools.py --non-interactive install-python-env
            python .\tools\idf_tools.py --non-interactive export
            # Check out the repository, move to the folder
            cd ~\project\
            git clone << pipeline.parameters.src-repo-url >> --recurse-submodules -j (Get-CimInstance Win32_ComputerSystem).NumberOfLogicalProcessors
            cd esp32-c3-playground
            # Build the emulator
            make -f emu.mk all
            # Build the firmware
            idf.py all build dfu
            # Generate a file with the date and version
            echo $(date) >> version.txt
            echo "https://github.com/AEFeinstein/esp32-c3-playground/commit/$env:CIRCLE_SHA1" >> version.txt
            # zip everything up in two zips
            zip << pipeline.parameters.windows-emu-artifact >> -r swadge_emulator.exe spiffs_image version.txt
            zip << pipeline.parameters.firmware-artifact >> -j build\bootloader\bootloader.bin build\partition_table\partition-table.bin build\swadge-esp32.bin build\storage.bin build\dfu.bin version.txt
            # Move the zips to where circleci expects it so that it gets uploaded as an artifact
            cp << pipeline.parameters.windows-emu-artifact >> C:\Users\circleci\project\
            cp << pipeline.parameters.firmware-artifact >> C:\Users\circleci\project\
      - store_artifacts:
          path: << pipeline.parameters.windows-emu-artifact >>
      - store_artifacts:
          path: << pipeline.parameters.firmware-artifact >>

workflows:
  version: 2
  build-firmware-windows:
    jobs:
      - build-windows:
          filters:
            branches:
              only: main
